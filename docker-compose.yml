services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    tty: true
    ports:
      - "8088:80"
    volumes:
      - .:/var/www/html
    networks:
      - app-net

  franken:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.franken
    ports:
      - "443:443"
      - "443:443/udp"
      - "2019:2019"
    volumes:
      - .:/var/www/html
      - ./docker/Caddyfile:/etc/caddy/Caddyfile
    tty: true
    environment:
      CADDY_GLOBAL_OPTIONS: "admin 0.0.0.0:2019\nmetrics"
      SERVER_NAME: ":8080 https://localhost:443"
    networks:
      - app-net

  franken-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.franken
    ports:
      - "444:443"
      - "444:443/udp"
      - "2020:2019"
    volumes:
      - .:/var/www/html
      - caddy_data:/data
      - caddy_config:/config
      - ./docker/Caddyfile:/etc/caddy/Caddyfile
    tty: true
    environment:
      CADDY_GLOBAL_OPTIONS: "admin 0.0.0.0:2019\nmetrics"
      FRANKENPHP_CONFIG: "worker ./public/index.php"
      APP_RUNTIME: "Runtime\\FrankenPhpSymfony\\Runtime"
      SERVER_NAME: ":8080 https://localhost:443"
    networks:
      - app-net

  opcache-dashboard:
    build:
      context: ./opcache
      dockerfile: ./Dockerfile
      args:
        VERSION: 0.6.0
    ports:
      - "42042:42042"
    volumes:
      - ./opcache/config.yaml:/config.yaml:ro
    command:
      - --config=/config.yaml
    networks:
      - app-net

  php-fpm-exporter:
    image: hipages/php-fpm_exporter:latest
    depends_on:
      - app
    environment:
      PHP_FPM_SCRAPE_URI: "tcp://app:9000/fpm-status"
    ports:
      - "9253:9253"
    networks:
      - app-net

  prometheus:
    image: prom/prometheus:v2.53.4
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - app-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - app-net

volumes:
  caddy_data:
  caddy_config:

networks:
  app-net:
    driver: bridge

