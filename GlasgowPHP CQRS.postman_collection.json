{
	"info": {
		"_postman_id": "7815f2e1-07f7-4fca-bb45-b5bfceca8732",
		"name": "GlasgowPHP CQRS",
		"description": "Complete CQRS API with Products, Customers, and Orders using Symfony Messenger and Redis projections",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9380861",
		"_collection_link": "https://blue-flare-138977.postman.co/workspace/f334b711-6a72-4066-aba3-dd32e5e75515/collection/9380861-7815f2e1-07f7-4fca-bb45-b5bfceca8732?action=share&source=collection_link&creator=9380861"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "List All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"products"
							]
						},
						"description": "Get all products from Redis projections (fast read)"
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Get a specific product by ID from Redis projections"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Sample Product",
									"description": "Product name",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This is a sample product description",
									"description": "Product description",
									"type": "text"
								},
								{
									"key": "price",
									"value": "99.99",
									"description": "Product price",
									"type": "text"
								},
								{
									"key": "created_at",
									"value": "{{$timestamp}}",
									"description": "Creation timestamp (optional)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/en/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"products"
							]
						},
						"description": "Create a new product (database write + Redis projection update)"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Update Product",
									"description": "Product name",
									"type": "text"
								},
								{
									"key": "description",
									"value": "This is a Update Product description",
									"description": "Product description",
									"type": "text"
								},
								{
									"key": "price",
									"value": "99.99",
									"description": "Product price",
									"type": "text"
								},
								{
									"key": "created_at",
									"value": "{{$timestamp}}",
									"description": "Creation timestamp (optional)",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/en/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Create a new product (database write + Redis projection update)"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/products/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"products",
								"{{product_id}}"
							]
						},
						"description": "Delete a product (database write + Redis projection cleanup)"
					},
					"response": []
				}
			],
			"description": "Product management endpoints using CQRS pattern"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "List All Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"customers"
							]
						},
						"description": "Get all customers from Redis projections (fast read)"
					},
					"response": []
				},
				{
					"name": "Get Customer by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/customers/{{customer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"customers",
								"{{customer_id}}"
							]
						},
						"description": "Get a specific customer by ID from Redis projections"
					},
					"response": []
				},
				{
					"name": "Create Customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "John Doe",
									"description": "Customer full name",
									"type": "text"
								},
								{
									"key": "email",
									"value": "john.doe@example.com",
									"description": "Customer email (unique)",
									"type": "text"
								},
								{
									"key": "address",
									"value": "123 Main Street",
									"description": "Customer address",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Glasgow",
									"description": "Customer city",
									"type": "text"
								},
								{
									"key": "postal_code",
									"value": "G1 1AA",
									"description": "Customer postal code",
									"type": "text"
								},
								{
									"key": "country",
									"value": "United Kingdom",
									"description": "Customer country",
									"type": "text"
								},
								{
									"key": "created_at",
									"value": "{{$timestamp}}",
									"description": "Creation timestamp (optional)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/en/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"customers"
							]
						},
						"description": "Create a new customer (database write + Redis projection update)"
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/customers/{{customer_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"customers",
								"{{customer_id}}"
							]
						},
						"description": "Delete a customer (database write + Redis projection cleanup)"
					},
					"response": []
				}
			],
			"description": "Customer management endpoints using CQRS pattern"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "List All Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"orders"
							]
						},
						"description": "Get all orders from Redis projections (fast read)"
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"orders",
								"{{order_id}}"
							]
						},
						"description": "Get a specific order by ID from Redis projections"
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customer_id\": 1,\n    \"order_number\": \"ORD-001\",\n    \"status\": \"pending\",\n    \"items\": [\n        {\n            \"product_id\": 1,\n            \"quantity\": 2\n        },\n        {\n            \"product_id\": 5,\n            \"quantity\": 1\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/en/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"orders"
							]
						},
						"description": "Create a new order (database write + Redis projection update)"
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								"orders",
								"{{order_id}}"
							]
						},
						"description": "Delete an order (database write + Redis projection cleanup)"
					},
					"response": []
				}
			],
			"description": "Order management endpoints using CQRS pattern"
		},
		{
			"name": "System",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/en/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"en",
								""
							]
						},
						"description": "Basic health check endpoint"
					},
					"response": []
				}
			],
			"description": "System and health check endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8088",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "customer_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "1",
			"type": "string"
		}
	]
}